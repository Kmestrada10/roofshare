# Style sheet for C++
# Copyright (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
# Copyright (c) 1995, 96, 97, 98, 99 Akim Demaille, Miguel Santana
# $Id: cpp.ssh,v 1.4 1998/01/21 15:56:18 demaille Exp $
#

#
# This file is part of a2ps.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING.  If not, write to
# the Free Software Foundation, 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#

# Thanks to Edouard Jactat for his comments.

## 1.3 Akim Demaille
# Documentation
## 1.2 Akim Demaille
# Alphabets are.
## 1.1 Akim Demaille
# Made it inherit from c.ssh

style "C++" is

written by "Akim Demaille <demaille@inf.enst.fr>"
version is 1.3
requires a2ps version 4.9.7

documentation is
  "Should handle all known variations of C++.  Most declarations (classes"
  "etc.) are not highlighted as they should be.  Please, step forward!"
end documentation

alphabets are
   "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_#$%"
case sensitive

ancestors are
   c
end ancestors


# Some types that are not part of C
keywords in Keyword are

   bool, const_cast, dynamic_cast, explicit, false, mutable,
   namespace, reinterpret_cast, static_cast, true, typeid, typename,
   using, wchar_t

end keywords


# Some keywords not in C
keywords in Keyword_strong are

   new, delete, this, operator, class, public, protected, private,
   virtual, friend, template, dynamic, typeof, all, except, exception,
   raise, raises, reraises, try, asm, catch, overload, and, and_eq,
   bitand, bitor, compl, not, not_eq, or, or_eq, xor, xor_eq

end keywords

# C style yet defines `//' because it is common today in plain C
end style
