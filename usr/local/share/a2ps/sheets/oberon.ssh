# Style sheet for oberon
# Copyright (c) 1988-1993 Miguel Santana
# Copyright (c) 1995-1999 Akim Demaille, Miguel Santana
# $Id: oberon.ssh,v 1.7 1998/01/15 15:02:42 demaille Exp $
#

#
# This file is part of a2ps.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING.  If not, write to
# the Free Software Foundation, 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#

## 1.2 Akim Demaille
# Added Doc

style Oberon is
version is 1.1
requires a2ps version 4.9.7
written by "Akim Demaille <demaille@inf.enst.fr>"

documentation is
   "Created by N. Wirth, Oberon is the successor of the Pascal and"
   "Modula-2 family of programming languages. It was specifically designed"
   "for systems programming, and was used to create the Oberon system in"
   "cooperation with J. Gutknecht. A few years later, the Oberon language"
   "was extended with additional object-oriented features to result in the"
   "programming language Oberon-2."
   ""
   "Implementation of the sheet based on url(http://www.math.tau.ac.il/~laden/Oberon.html)url(The Oberon Reference Site)url."
end documentation

alphabets are
   "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"
case sensitive

keywords in Keyword_strong are
#   ARRAY, IS, TO, BEGIN, LOOP, TYPE, CASE, MOD, UNTIL, CONST, MODULE,
#   VAR, DIV, NIL, WHILE, DO, OF, WITH, ELSE, OR, ELSIF, POINTER, END,
#   PROCEDURE, EXIT, RECORD, IF, REPEAT, IMPORT, RETURN, IN, THEN
   /ARRAY\\|BEGIN\\|C\\(ASE\\|ONST\\)\\|D\\(IV\\|O\\)\\|E\\(LS\\(E\\|IF\\)\\|ND\\|XIT\\)\\|I\\([FNS]\\|MPORT\\)\\|LOOP\\|MOD\\(\\|ULE\\)\\|NIL\\|O[FR]\\|P\\(OINTER\\|ROCEDURE\\)\\|RE\\(CORD\\|PEAT\\|TURN\\)\\|T\\(HEN\\|O\\|YPE\\)\\|UNTIL\\|VAR\\|W\\(HILE\\|ITH\\)/
end keywords

keywords in Keyword are
#   ABS, LEN, ASH, LONG, BOOLEAN, LONGINT, BYTE, LONGREAL, CAP, MAX,
#   CHAR, MIN, CHR, NEW, DEC, ODD, ENTIER, ORD, EXCL, REAL, FALSE, SET,
#   HALT, SHORT, INC, SHORTINT, INCL, SIZE, INTEGER, TRUE
   /A\\(BS\\|SH\\)\\|B\\(OOLEAN\\|YTE\\)\\|C\\(AP\\|H\\(AR\\|R\\)\\)\\|DEC\\|E\\(NTIER\\|XCL\\)\\|FALSE\\|HALT\\|IN\\(CL?\\|TEGER\\)\\|L\\(EN\\|ONG\\(\\|INT\\|REAL\\)\\)\\|M\\(AX\\|IN\\)\\|NEW\\|O\\(DD\\|RD\\)\\|REAL\\|S\\(ET\\|HORT\\(\\|INT\\)\\|IZE\\)\\|TRUE/
end keywords

optional keywords are
   IN \in,
   NOT \not,
   AND \wedge,
   OR \vee
end keywords

optional operators are
   -> \rightarrow,
   <= \leq,
   >= \geq,
   :=,
   "#" \neq,
   = \equiv
end operators

sequences are
    "(*" Plain Comment "*)" Plain,
    C-string,
    C-char
end sequences
end style
